<?xml version="1.0" encoding="UTF-8"?>
<Patch>
  
  <Operation Class="PatchOperationFindMod">
    <mods>
      <li>Alpha Biomes</li>
    </mods>
    <match Class="PatchOperationAdd">
      <xpath>Defs</xpath>
      <value>
  
        <ThingDef Name="ZF_WeatheredRoseQuartz" ParentName="WeatheredRockBase" Class="Minerals.ThingDef_StaticMineral">
          <defName>ZF_WeatheredRoseQuartz</defName>
          <label>Weathered Rose Quartz</label>
          <description>Hard, pinkish looking mineral deposit.</description>
          <graphicData>
            <shaderType>CutoutComplex</shaderType>
            <texPath>Things/Rock/WeatheredGranite</texPath>
            <graphicClass>Graphic_Random</graphicClass>
            <drawSize>(4,4)</drawSize>
            <color>(120,50,50)</color>
          </graphicData>
          <uiIconPath>Things/Rock/WeatheredGranite/WeatheredGraniteA</uiIconPath>
          <statBases>
            <MaxHitPoints>1400</MaxHitPoints>
            <Flammability>0</Flammability>
            <Beauty>3</Beauty>
          </statBases>
          <building>
            <isInert>true</isInert>
            <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
            <isNaturalRock>true</isNaturalRock>
            <isResourceRock>true</isResourceRock>
            <mineableThing>GU_ChunkRoseQuartz</mineableThing>
            <mineableDropChance>0.3</mineableDropChance>
            <mineableYield>1</mineableYield>
            <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
            <claimable>false</claimable>
            <deconstructible>false</deconstructible>
            <isEdifice>true</isEdifice>
          </building>
          <!--How far away it can spawn from an existing location-->
          <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
          <spawnRadius>1</spawnRadius>
          <!-- The probability that this mineral type will be spawned at all on a given map -->
          <perMapProbability>1</perMapProbability>
          <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
          <minClusterProbability>0.01</minClusterProbability>
          <maxClusterProbability>0.02</maxClusterProbability>
          <!-- How  many squares each cluster will be -->
          <minClusterSize>1</minClusterSize>
          <maxClusterSize>5</maxClusterSize>
          <!-- The range of starting sizes of individuals in clusters -->
          <initialSizeMin>1</initialSizeMin>
          <initialSizeMax>1</initialSizeMax>
          <!-- How much initial sizes of individuals randomly vary -->
          <initialSizeVariation>.3</initialSizeVariation>
          <!-- The terrains this can appear on. The default is rocky terrains-->
          <allowedTerrains>
      		</allowedTerrains>
          <!-- The terrains this must be near to, but not necessarily on -->
          <neededNearbyTerrains>
            <li>GU_RoseQuartz_Rough</li>
          </neededNearbyTerrains>
          <!-- how far away it can be from needed nearby terrains-->
          <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
          <!-- If true, growth rate and initial size depends on distance from needed terrains -->
          <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
          <!-- Other resources it might drop -->
          <randomlyDropResources>
            <li>
              <ResourceDefName>RoughGem</ResourceDefName>
              <DropProbability>0.08</DropProbability>
            </li>
            <li>
              <ResourceDefName>CrushedStone</ResourceDefName>
              <DropProbability>2</DropProbability>
              <CountPerDrop>5</CountPerDrop>
            </li>
          </randomlyDropResources>
          <!-- Things this mineral replaces when a map is initialized -->
          <ThingsToReplace>
            <li>GU_RoseQuartz</li>
          </ThingsToReplace>
          <!-- Tags which determine how some options behave  -->
          <tags>
            <li>rock</li>
            <li>wall</li>
            <li>weathered</li>
          </tags>
        </ThingDef>
        
        
        <ThingDef Name="ZF_SolidRoseQuartz" ParentName="SolidRockBase" Class="Minerals.ThingDef_SolidRock">
          <defName>ZF_SolidRoseQuartz</defName>
          <label>Solid Rose Quartz</label>
          <description>Hard, pinkish looking mineral deposit.</description>
          <graphicData>
            <texPath>Things/Rock/WeatheredBasalt</texPath>
            <graphicClass>Graphic_Random</graphicClass>
            <drawSize>(4,4)</drawSize>
            <color>(120,50,50)</color>
          </graphicData>
          <uiIconPath>Things/Rock/WeatheredBasalt/WeatheredBasaltA</uiIconPath>
          <statBases>
            <MaxHitPoints>1600</MaxHitPoints>
            <Flammability>0</Flammability>
            <Beauty>1</Beauty>
          </statBases>
          <building>
            <isInert>true</isInert>
            <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
            <isNaturalRock>true</isNaturalRock>
            <isResourceRock>true</isResourceRock>
            <mineableThing>GU_ChunkRoseQuartz</mineableThing>
            <mineableDropChance>0.3</mineableDropChance>
            <mineableYield>1</mineableYield>
            <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
            <claimable>false</claimable>
            <deconstructible>false</deconstructible>
            <isEdifice>true</isEdifice>
          </building>
          <!--How far away it can spawn from an existing location-->
          <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
          <spawnRadius>1</spawnRadius>
          <!-- The probability that this mineral type will be spawned at all on a given map -->
          <perMapProbability>0</perMapProbability>
          <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
          <minClusterProbability>0</minClusterProbability>
          <maxClusterProbability>0</maxClusterProbability>
          <!-- How  many squares each cluster will be -->
          <minClusterSize>1</minClusterSize>
          <maxClusterSize>10</maxClusterSize>
          <!-- The range of starting sizes of individuals in clusters -->
          <initialSizeMin>1</initialSizeMin>
          <initialSizeMax>1</initialSizeMax>
          <!-- How much initial sizes of individuals randomly vary -->
          <initialSizeVariation>.3</initialSizeVariation>
          <!-- The terrains this can appear on. The default is rocky terrains-->
          <allowedTerrains>
      		</allowedTerrains>
          <!-- The terrains this must be near to, but not necessarily on -->
          <neededNearbyTerrains>
            <li>GU_RoseQuartz_Rough</li>
          </neededNearbyTerrains>
          <!-- how far away it can be from needed nearby terrains-->
          <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
          <!-- If true, growth rate and initial size depends on distance from needed terrains -->
          <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
          <!-- Other resources it might drop -->
          <randomlyDropResources>
            <li>
              <ResourceDefName>RoughGem</ResourceDefName>
              <DropProbability>0.08</DropProbability>
            </li>
            <li>
              <ResourceDefName>CrushedStone</ResourceDefName>
              <DropProbability>2</DropProbability>
              <CountPerDrop>5</CountPerDrop>
            </li>
          </randomlyDropResources>
          <!-- Things this mineral replaces when a map is initialized -->
          <ThingsToReplace>
            <li>GU_RoseQuartz</li>
            <li>ZF_HewnRoseQuartz</li>
          </ThingsToReplace>
          <!-- Tags which determine how some options behave  -->
          <tags>
            <li>rock</li>
            <li>wall</li>
            <li>solid</li>
          </tags>
        </ThingDef>
        
      
        <ThingDef Name="ZF_HewnRoseQuartz" ParentName="HewnRockBase" Class="Minerals.ThingDef_StaticMineral">
          <defName>ZF_HewnRoseQuartz</defName>
          <label>Hewn Rose Quartz</label>
          <description>Hard, pinkish looking mineral deposit.</description>
          <graphicData>
      			<texPath>Things/Rock/HewnRockWall</texPath>
      			<graphicClass>Graphic_Random</graphicClass>
      			<linkType>CornerFiller</linkType>
      			<linkFlags>
      				<li>Wall</li>
              <li>Rock</li>
              <li>MapEdge</li>
      			</linkFlags>
      			<damageData>
      				<cornerTL>Damage/Corner</cornerTL>
      				<cornerTR>Damage/Corner</cornerTR>
      				<cornerBL>Damage/Corner</cornerBL>
      				<cornerBR>Damage/Corner</cornerBR>
      				<edgeTop>Damage/Edge</edgeTop>
      				<edgeBot>Damage/Edge</edgeBot>
      				<edgeLeft>Damage/Edge</edgeLeft>
      				<edgeRight>Damage/Edge</edgeRight>
      			</damageData>
            <color>(120,50,50)</color>
          </graphicData>
          <uiIconPath>Things/Rock/HewnRockWall/HewnRockWallA</uiIconPath>
          <statBases>
            <MaxHitPoints>1700</MaxHitPoints>
            <Flammability>0</Flammability>
            <Beauty>0</Beauty>
          </statBases>
          <building>
            <isInert>true</isInert>
            <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
            <isNaturalRock>true</isNaturalRock>
            <isResourceRock>true</isResourceRock>
            <mineableThing>GU_ChunkRoseQuartz</mineableThing>
            <mineableDropChance>0.3</mineableDropChance>
            <mineableYield>1</mineableYield>
            <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
            <claimable>false</claimable>
            <deconstructible>false</deconstructible>
            <isEdifice>true</isEdifice>
            <smoothedThing>ZF_SmoothedHewnRoseQuartz</smoothedThing>
          </building>
          <!--How far away it can spawn from an existing location-->
          <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
          <spawnRadius>1</spawnRadius>
          <!-- The probability that this mineral type will be spawned at all on a given map -->
          <perMapProbability>0</perMapProbability>
          <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
          <minClusterProbability>0</minClusterProbability>
          <maxClusterProbability>0</maxClusterProbability>
          <!-- How  many squares each cluster will be -->
          <minClusterSize>1</minClusterSize>
          <maxClusterSize>10</maxClusterSize>
          <!-- The range of starting sizes of individuals in clusters -->
          <initialSizeMin>1</initialSizeMin>
          <initialSizeMax>1</initialSizeMax>
          <!-- How much initial sizes of individuals randomly vary -->
          <initialSizeVariation>.3</initialSizeVariation>
          <!-- The terrains this can appear on. The default is rocky terrains-->
          <allowedTerrains>
      		</allowedTerrains>
          <!-- The terrains this must be near to, but not necessarily on -->
          <neededNearbyTerrains>
            <li>RoseQuartz</li>
          </neededNearbyTerrains>
          <!-- how far away it can be from needed nearby terrains-->
          <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
          <!-- If true, growth rate and initial size depends on distance from needed terrains -->
          <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
          <!-- The maximum number of images that will be printed per square -->
          <maxMeshCount>1</maxMeshCount>
          <!-- The size range -->
          <visualSizeRange>
            <min>1.7</min>
            <max>1.8</max>
          </visualSizeRange>
          <visualClustering>1.0</visualClustering>
          <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
          <visualSpread>0.2</visualSpread>
          <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
          <visualSizeVariation>0.2</visualSizeVariation>
          <!-- Other resources it might drop -->
          <randomlyDropResources>
            <li>
              <ResourceDefName>RoughGem</ResourceDefName>
              <DropProbability>0.08</DropProbability>
            </li>
            <li>
              <ResourceDefName>CrushedStone</ResourceDefName>
              <DropProbability>2</DropProbability>
              <CountPerDrop>5</CountPerDrop>
            </li>
          </randomlyDropResources>
          <!-- Things this mineral replaces when a map is initialized -->
          <ThingsToReplace>
            <li>GU_RoseQuartz</li>
          </ThingsToReplace>
          <!-- Tags which determine how some options behave  -->
          <tags>
            <li>rock</li>
            <li>wall</li>
            <li>hewn</li>
          </tags>
        </ThingDef>
       
        
        <ThingDef Name="ZF_SmoothedHewnRoseQuartz" ParentName="HewnRockBase" Class="Minerals.ThingDef_StaticMineral">
          <defName>ZF_SmoothedHewnRoseQuartz</defName>
          <label>Smoothed Rose Quartz Wall</label>
          <description>Hard, pinkish looking mineral deposit.</description>
          <graphicData>
      			<texPath>Things/Rock/SmoothedRockWall</texPath>
      			<graphicClass>Graphic_Random</graphicClass>
      			<linkType>CornerFiller</linkType>
      			<linkFlags>
      				<li>Wall</li>
              <li>Rock</li>
              <li>MapEdge</li>
      			</linkFlags>
      			<damageData>
      				<cornerTL>Damage/Corner</cornerTL>
      				<cornerTR>Damage/Corner</cornerTR>
      				<cornerBL>Damage/Corner</cornerBL>
      				<cornerBR>Damage/Corner</cornerBR>
      				<edgeTop>Damage/Edge</edgeTop>
      				<edgeBot>Damage/Edge</edgeBot>
      				<edgeLeft>Damage/Edge</edgeLeft>
      				<edgeRight>Damage/Edge</edgeRight>
      			</damageData>
            <color>(120,50,50)</color>
          </graphicData>
          <uiIconPath>Things/Rock/SmoothedRockWall/SmoothedRockWallA</uiIconPath>
          <statBases>
            <MaxHitPoints>1600</MaxHitPoints>
            <Flammability>0</Flammability>
            <Beauty>2</Beauty>
          </statBases>
          <building>
            <isInert>true</isInert>
            <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
            <isNaturalRock>true</isNaturalRock>
            <isResourceRock>true</isResourceRock>
            <mineableThing>GU_ChunkRoseQuartz</mineableThing>
            <mineableDropChance>0.3</mineableDropChance>
            <mineableYield>1</mineableYield>
            <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
            <claimable>false</claimable>
            <deconstructible>false</deconstructible>
            <isEdifice>true</isEdifice>
          </building>
          <!-- Other resources it might drop -->
          <randomlyDropResources>
            <li>
              <ResourceDefName>RoughGem</ResourceDefName>
              <DropProbability>0.08</DropProbability>
            </li>
            <li>
              <ResourceDefName>CrushedStone</ResourceDefName>
              <DropProbability>2</DropProbability>
              <CountPerDrop>5</CountPerDrop>
            </li>
          </randomlyDropResources>
          <!-- Tags which determine how some options behave  -->
          <tags>
            <li>rock</li>
            <li>wall</li>
            <li>hewn</li>
          </tags>
        </ThingDef>
      
        
        <ThingDef Name="ZF_BoulderRoseQuartz" ParentName="BoulderRockBase" Class="Minerals.ThingDef_StaticMineral">
          <defName>ZF_BoulderRoseQuartz</defName>
          <label>Rose Quartz Boulder</label>
          <description>Hard, pinkish looking mineral deposit.</description>
          <graphicData>
            <shaderType>CutoutComplex</shaderType>
            <texPath>Things/Rock/BoulderGranite</texPath>
            <graphicClass>Graphic_Random</graphicClass>
            <drawSize>(1.5,1.5)</drawSize>
            <color>(120,50,50)</color>
          </graphicData>
          <uiIconPath>Things/Rock/BoulderGranite/BoulderGraniteA</uiIconPath>
          <fillPercent>0.6</fillPercent>
          <statBases>
            <MaxHitPoints>900</MaxHitPoints>
            <Flammability>0</Flammability>
            <Beauty>2</Beauty>
          </statBases>
          <pathCost>100</pathCost>
          <building>
            <isInert>true</isInert>
            <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
            <isNaturalRock>true</isNaturalRock>
            <isResourceRock>true</isResourceRock>
            <mineableThing>GU_ChunkRoseQuartz</mineableThing>
            <mineableDropChance>0.6</mineableDropChance>
            <mineableYield>1</mineableYield>
            <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
            <claimable>false</claimable>
            <deconstructible>false</deconstructible>
          </building>
          <!--How far away it can spawn from an existing location-->
          <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
          <spawnRadius>1</spawnRadius>
          <!-- The probability that this mineral type will be spawned at all on a given map -->
          <perMapProbability>1</perMapProbability>
          <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
          <minClusterProbability>0.005</minClusterProbability>
          <maxClusterProbability>0.01</maxClusterProbability>
          <!-- How  many squares each cluster will be -->
          <minClusterSize>1</minClusterSize>
          <maxClusterSize>2</maxClusterSize>
          <!-- The range of starting sizes of individuals in clusters -->
          <initialSizeMin>.7</initialSizeMin>
          <initialSizeMax>.9</initialSizeMax>
          <!-- How much initial sizes of individuals randomly vary -->
          <initialSizeVariation>.2</initialSizeVariation>
          <!-- The terrains this can appear on. The default is rocky terrains-->
      		<allowedTerrains>
      			<li>AB_CrackedMud</li>
      			<li>AB_RichCrackedMud</li>
      			<li>AB_FineSand</li>
      			<li>GU_RoseQuartz_Rough</li>
      			<li>GU_AlienSandFine</li>
      			<li>GU_AlienSand</li>
      			<li>GU_RichAlienSand</li>
      			<li>GU_MossyRed</li>
      			<li>GU_RedWaterShallow</li>
      			<li>GU_RedWaterDeep</li>
      			<li>RockySoil</li>
      			<li>Gravel</li>
      			<li>Sand</li>
      			<li>Soil</li>
      			<li>SoilRich</li>
      			<li>MarshyTerrain</li>
      			<li>MossyTerrain</li>
      			<li>Marsh</li>
      			<li>PoorSoil</li>
      			<li>MarginalSoil</li>
      			<li>Mud</li>
            <li>SavannaSoil</li>
            <li>MarginalSoil</li>
      			<li>WaterOceanShallow</li>
            <li>WaterMovingShallow</li>
      			<li>WaterShallow</li>
      			<li>Ice</li>
      		</allowedTerrains>
          <!-- The terrains this must be near to, but not necessarily on -->
          <neededNearbyTerrains>
            <li>GU_RoseQuartz_Rough</li>
            <li>ZF_WeatheredRoseQuartz</li>
            <li>ZF_SolidRoseQuartz</li>
            <li>RoseQuartz</li>
          </neededNearbyTerrains>
          <!-- how far away it can be from needed nearby terrains-->
          <neededNearbyTerrainRadius>10</neededNearbyTerrainRadius>
          <!-- If true, growth rate and initial size depends on distance from needed terrains -->
          <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
          <!-- Controls how extra clusters are added near assocaited ore-->
          <associatedOres>
            <li>GU_RoseQuartz_Rough</li>
            <li>ZF_WeatheredRoseQuartz</li>
            <li>RoseQuartz</li>
          </associatedOres>
          <nearAssociatedOreBonus>3</nearAssociatedOreBonus>
          <!-- Roof requirements -->
          <mustBeUnderRoof>false</mustBeUnderRoof>
          <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
          <mustBeUnroofed>false</mustBeUnroofed>
          <!-- The maximum number of images that will be printed per square -->
          <maxMeshCount>1</maxMeshCount>
          <!-- The size range -->
          <visualSizeRange>
            <min>1.1</min>
            <max>1.3</max>
          </visualSizeRange>
          <visualClustering>1.0</visualClustering>
          <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
          <visualSpread>0.8</visualSpread>
          <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
          <visualSizeVariation>0.1</visualSizeVariation>
          <!-- Other resources it might drop -->
          <randomlyDropResources>
            <li>
              <ResourceDefName>RoughGem</ResourceDefName>
              <DropProbability>0.08</DropProbability>
            </li>
            <li>
              <ResourceDefName>CrushedStone</ResourceDefName>
              <DropProbability>1</DropProbability>
              <CountPerDrop>5</CountPerDrop>
            </li>
          </randomlyDropResources>
          
          <!-- Things this mineral replaces when a map is initialized -->
          <ThingsToReplace>
            <li>GU_ChunkRoseQuartz</li>
          </ThingsToReplace>
      
          <!-- Tags which determine how some options behave  -->
          <tags>
            <li>rock</li>
            <li>boulder</li>
            <li>chunk_replacer</li>
          </tags>
      
        </ThingDef>
        
      
        <ThingDef Name="ZF_PassableRoseQuartz" ParentName="SmallRockBase" Class="Minerals.ThingDef_StaticMineral">
          <defName>ZF_PassableRoseQuartz</defName>
          <label>Rose Quartz Rocks</label>
          <description>Hard, pinkish looking mineral deposit.</description>
          <graphicData>
            <shaderType>CutoutComplex</shaderType>
            <texPath>Things/Rock/PassableLimestone</texPath>
            <graphicClass>Graphic_Random</graphicClass>
            <drawSize>(1.5,1.5)</drawSize>
            <color>(120,50,50)</color>
            <damageData>
              <enabled>false</enabled>
            </damageData>
          </graphicData>
          <uiIconPath>Things/Rock/PassableLimestone/PassableLimestoneA</uiIconPath>
          <fillPercent>0.3</fillPercent>
          <statBases>
            <MaxHitPoints>600</MaxHitPoints>
            <Flammability>0</Flammability>
            <Beauty>0</Beauty>
          </statBases>
          <pathCost>20</pathCost>
          <building>
            <isInert>true</isInert>
            <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
            <isNaturalRock>true</isNaturalRock>
            <isResourceRock>true</isResourceRock>
            <mineableThing>GU_ChunkRoseQuartz</mineableThing>
            <mineableDropChance>0.3</mineableDropChance>
            <mineableYield>1</mineableYield>
            <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
            <claimable>false</claimable>
            <deconstructible>false</deconstructible>
          </building>
          <!--How far away it can spawn from an existing location-->
          <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
          <spawnRadius>1</spawnRadius>
          <!-- The probability that this mineral type will be spawned at all on a given map -->
          <perMapProbability>1</perMapProbability>
          <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
          <minClusterProbability>0.02</minClusterProbability>
          <maxClusterProbability>0.03</maxClusterProbability>
          <!-- How  many squares each cluster will be -->
          <minClusterSize>1</minClusterSize>
          <maxClusterSize>4</maxClusterSize>
          <!-- The range of starting sizes of individuals in clusters -->
          <initialSizeMin>0.5</initialSizeMin>
          <initialSizeMax>1.0</initialSizeMax>
          <!-- How much initial sizes of individuals randomly vary -->
          <initialSizeVariation>.2</initialSizeVariation>
          <!-- The terrains this can appear on. The default is rocky terrains-->
      		<allowedTerrains>
      			<li>AB_CrackedMud</li>
      			<li>AB_FineSand</li>
      			<li>GU_RoseQuartz_Rough</li>
      			<li>GU_AlienSandFine</li>
      			<li>GU_AlienSand</li>
      			<li>GU_RichAlienSand</li>
      			<li>GU_MossyRed</li>
      			<li>GU_RedWaterShallow</li>
      			<li>GU_RedWaterDeep</li>
      			<li>RockySoil</li>
      			<li>Gravel</li>
      			<li>Sand</li>
      			<li>Soil</li>
      			<li>PoorSoil</li>
      			<li>MarginalSoil</li>
      			<li>MarshyTerrain</li>
      			<li>MossyTerrain</li>
      			<li>Marsh</li>
      			<li>Mud</li>
            <li>SavannaSoil</li>
            <li>WaterShallow</li>
            <li>WaterMovingShallow</li>
      			<li>WaterOceanShallow</li>
      			<li>Ice</li>
      			<li>SaltField</li>
      		</allowedTerrains>
          <!-- The terrains this must be near to, but not necessarily on -->
          <neededNearbyTerrains>
            <li>ZF_BoulderRoseQuartz</li>
      			<li>GU_RoseQuartz_Rough</li>
            <li>ZF_WeatheredRoseQuartz</li>
            <li>ZF_SolidRoseQuartz</li>
            <li>RoseQuartz</li>
          </neededNearbyTerrains>
          <!-- how far away it can be from needed nearby terrains-->
          <neededNearbyTerrainRadius>4</neededNearbyTerrainRadius>
          <!-- If true, growth rate and initial size depends on distance from needed terrains -->
          <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
          <!-- Controls how extra clusters are added near assocaited ore-->
          <associatedOres>
            <li>ZF_BoulderRoseQuartz</li>
            <li>ZF_WeatheredRoseQuartz</li>
            <li>RoseQuartz</li>
          </associatedOres>
          <nearAssociatedOreBonus>3</nearAssociatedOreBonus>
          <!-- Roof requirements -->
          <mustBeUnderRoof>false</mustBeUnderRoof>
          <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
          <mustBeUnroofed>false</mustBeUnroofed>
          <!-- The maximum number of images that will be printed per square -->
          <maxMeshCount>2</maxMeshCount>
          <!-- The size range -->
          <visualSizeRange>
            <min>0.5</min>
            <max>0.7</max>
          </visualSizeRange>
          <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
          <visualClustering>0.3</visualClustering>
          <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
          <visualSpread>1.2</visualSpread>
          <visualSizeVariation>0.3</visualSizeVariation>
          <!-- Other resources it might drop -->
          <randomlyDropResources>
            <li>
              <ResourceDefName>RoughGem</ResourceDefName>
              <DropProbability>0.08</DropProbability>
            </li>
            <li>
              <ResourceDefName>CrushedStone</ResourceDefName>
              <DropProbability>1</DropProbability>
              <CountPerDrop>5</CountPerDrop>
            </li>
          </randomlyDropResources>
      
        </ThingDef>
  
  
      </value>
    </match>
  </Operation>

</Patch>
