<?xml version="1.0" encoding="UTF-8"?>
<Patch>
  
  <Operation Class="PatchOperationFindMod">
    <mods>
      <li>Alpha Biomes</li>
    </mods>
    <match Class="PatchOperationAdd">
      <xpath>Defs</xpath>
      <value>
        
        
          <ThingDef Name="ZF_WeatheredAncientMetals" ParentName="WeatheredRockBase" Class="Minerals.ThingDef_StaticMineral">
            <defName>ZF_WeatheredAncientMetals</defName>
            <label>Weathered Ancient Metals</label>
            <description>These ancient metal walls have been here for a while. They can be mined to acquire steel chunks.</description>
            <graphicData>
              <shaderType>CutoutComplex</shaderType>
              <texPath>Things/Ore/HewnOre</texPath>
        			<graphicClass>Graphic_Random</graphicClass>
        			<linkType>CornerFiller</linkType>
        			<linkFlags>
        				<li>Wall</li>
                <li>Rock</li>
                <li>MapEdge</li>
        			</linkFlags>
        			<damageData>
        				<cornerTL>Damage/Corner</cornerTL>
        				<cornerTR>Damage/Corner</cornerTR>
        				<cornerBL>Damage/Corner</cornerBL>
        				<cornerBR>Damage/Corner</cornerBR>
        				<edgeTop>Damage/Edge</edgeTop>
        				<edgeBot>Damage/Edge</edgeBot>
        				<edgeLeft>Damage/Edge</edgeLeft>
        				<edgeRight>Damage/Edge</edgeRight>
        			</damageData>
              <drawSize>(4,4)</drawSize>
            </graphicData>
            <randomColorsOne>
              <li>(80,80,80)</li>
              <li>(82,82,82)</li>
              <li>(84,84,84)</li>
              <li>(86,86,86)</li>
            </randomColorsOne>
            <randomColorsTwo>
              <li>(140,90,70)</li>
              <li>(145,95,75)</li>
              <li>(145,90,75)</li>
              <li>(150,95,80)</li>
              <li>(150,100,90)</li>
              <li>(150,105,95)</li>
              <li>(150,115,105)</li>
            </randomColorsTwo>
            <uiIconPath>Things/Ore/HewnOre/HewnOreA</uiIconPath>
            <statBases>
              <MaxHitPoints>2000</MaxHitPoints>
              <Flammability>0</Flammability>
              <Beauty>-3</Beauty>
            </statBases>
            <building>
              <isInert>true</isInert>
              <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
              <isNaturalRock>true</isNaturalRock>
              <isResourceRock>true</isResourceRock>
              <mineableThing>ChunkSlagSteel</mineableThing>
              <mineableDropChance>0.65</mineableDropChance>
              <mineableYield>1</mineableYield>
              <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
              <claimable>false</claimable>
              <deconstructible>false</deconstructible>
              <isEdifice>true</isEdifice>
            </building>
            <!--How far away it can spawn from an existing location-->
            <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
            <spawnRadius>1</spawnRadius>
            <!-- The probability that this mineral type will be spawned at all on a given map -->
            <perMapProbability>1</perMapProbability>
            <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
            <minClusterProbability>0.01</minClusterProbability>
            <maxClusterProbability>0.02</maxClusterProbability>
            <!-- How  many squares each cluster will be -->
            <minClusterSize>1</minClusterSize>
            <maxClusterSize>5</maxClusterSize>
            <!-- The range of starting sizes of individuals in clusters -->
            <initialSizeMin>1</initialSizeMin>
            <initialSizeMax>1</initialSizeMax>
            <!-- How much initial sizes of individuals randomly vary -->
            <initialSizeVariation>.3</initialSizeVariation>
            <!-- The terrains this can appear on. The default is rocky terrains-->
            <allowedTerrains>
        		</allowedTerrains>
            <!-- The terrains this must be near to, but not necessarily on -->
            <neededNearbyTerrains>
              <li>GU_AncientMetals_Rough</li>
            </neededNearbyTerrains>
            <!-- how far away it can be from needed nearby terrains-->
            <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
            <!-- If true, growth rate and initial size depends on distance from needed terrains -->
            <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
            <!-- Other resources it might drop -->
            <randomlyDropResources>
              <li>
                <ResourceDefName>Mechanism</ResourceDefName>
                <DropProbability>0.2</DropProbability>
              </li>
              <li>
                <ResourceDefName>ElectronicComponents</ResourceDefName>
                <DropProbability>0.1</DropProbability>
              </li>
              <li>
                <ResourceDefName>ComponentIndustrial</ResourceDefName>
                <DropProbability>0.5</DropProbability>
              </li>
            </randomlyDropResources>
            <!-- Things this mineral replaces when a map is initialized -->
            <ThingsToReplace>
              <li>GU_AncientMetals</li>
            </ThingsToReplace>
            <!-- Tags which determine how some options behave  -->
            <tags>
              <li>rock</li>
              <li>wall</li>
              <li>weathered</li>
            </tags>
          </ThingDef>
          
          
          <ThingDef Name="ZF_SolidAncientMetals" ParentName="SolidRockBase" Class="Minerals.ThingDef_SolidRock">
            <defName>ZF_SolidAncientMetals</defName>
            <label>Solid Ancient Metals</label>
            <description>These ancient metal walls have been here for a while. They can be mined to acquire steel chunks.</description>
            <graphicData>
              <shaderType>CutoutComplex</shaderType>
              <texPath>Things/Ore/HewnOre</texPath>
        			<graphicClass>Graphic_Random</graphicClass>
        			<linkType>CornerFiller</linkType>
        			<linkFlags>
        				<li>Wall</li>
                <li>Rock</li>
                <li>MapEdge</li>
        			</linkFlags>
        			<damageData>
        				<cornerTL>Damage/Corner</cornerTL>
        				<cornerTR>Damage/Corner</cornerTR>
        				<cornerBL>Damage/Corner</cornerBL>
        				<cornerBR>Damage/Corner</cornerBR>
        				<edgeTop>Damage/Edge</edgeTop>
        				<edgeBot>Damage/Edge</edgeBot>
        				<edgeLeft>Damage/Edge</edgeLeft>
        				<edgeRight>Damage/Edge</edgeRight>
        			</damageData>
              <drawSize>(4,4)</drawSize>
              <color>(80,80,80)</color>
              <colorTwo>(150,130,120)</colorTwo>
            </graphicData>
            <randomColorsOne>
              <li>(80,80,80)</li>
              <li>(82,82,82)</li>
              <li>(84,84,84)</li>
              <li>(86,86,86)</li>
            </randomColorsOne>
            <randomColorsTwo>
              <li>(150,130,120)</li>
              <li>(155,135,125)</li>
              <li>(150,135,125)</li>
              <li>(160,140,130)</li>
              <li>(150,135,125)</li>
              <li>(150,140,130)</li>
            </randomColorsTwo>
            <uiIconPath>Things/Ore/HewnOre/HewnOreA</uiIconPath>
            <statBases>
              <MaxHitPoints>2300</MaxHitPoints>
              <Flammability>0</Flammability>
              <Beauty>-2</Beauty>
            </statBases>
            <building>
              <isInert>true</isInert>
              <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
              <isNaturalRock>true</isNaturalRock>
              <isResourceRock>true</isResourceRock>
              <mineableThing>ChunkSlagSteel</mineableThing>
              <mineableDropChance>0.7</mineableDropChance>
              <mineableYield>1</mineableYield>
              <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
              <claimable>false</claimable>
              <deconstructible>false</deconstructible>
              <isEdifice>true</isEdifice>
            </building>
            <!--How far away it can spawn from an existing location-->
            <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
            <spawnRadius>1</spawnRadius>
            <!-- The probability that this mineral type will be spawned at all on a given map -->
            <perMapProbability>0</perMapProbability>
            <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
            <minClusterProbability>0</minClusterProbability>
            <maxClusterProbability>0</maxClusterProbability>
            <!-- How  many squares each cluster will be -->
            <minClusterSize>1</minClusterSize>
            <maxClusterSize>10</maxClusterSize>
            <!-- The range of starting sizes of individuals in clusters -->
            <initialSizeMin>1</initialSizeMin>
            <initialSizeMax>1</initialSizeMax>
            <!-- How much initial sizes of individuals randomly vary -->
            <initialSizeVariation>.3</initialSizeVariation>
            <!-- The terrains this can appear on. The default is rocky terrains-->
            <allowedTerrains>
        		</allowedTerrains>
            <!-- The terrains this must be near to, but not necessarily on -->
            <neededNearbyTerrains>
              <li>GU_AncientMetals_Rough</li>
            </neededNearbyTerrains>
            <!-- how far away it can be from needed nearby terrains-->
            <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
            <!-- If true, growth rate and initial size depends on distance from needed terrains -->
            <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect> 
            <!-- Other resources it might drop -->
            <randomlyDropResources>
              <li>
                <ResourceDefName>Mechanism</ResourceDefName>
                <DropProbability>0.2</DropProbability>
              </li>
              <li>
                <ResourceDefName>AdvMechanism</ResourceDefName>
                <DropProbability>0.02</DropProbability>
              </li>
              <li>
                <ResourceDefName>Electronics</ResourceDefName>
                <DropProbability>0.1</DropProbability>
              </li>
              <li>
                <ResourceDefName>ElectronicComponents</ResourceDefName>
                <DropProbability>0.2</DropProbability>
              </li>
              <li>
                <ResourceDefName>ComponentIndustrial</ResourceDefName>
                <DropProbability>0.5</DropProbability>
              </li>
            </randomlyDropResources>
            <!-- Things this mineral replaces when a map is initialized -->
            <ThingsToReplace>
              <li>ZF_HewnAncientMetals</li>
              <li>GU_AncientMetals</li>
            </ThingsToReplace>
            <!-- Tags which determine how some options behave  -->
            <tags>
              <li>rock</li>
              <li>wall</li>
              <li>solid</li>
            </tags>
          </ThingDef>
          
        
          <ThingDef Name="ZF_HewnAncientMetals" ParentName="HewnRockBase" Class="Minerals.ThingDef_StaticMineral">
            <defName>ZF_HewnAncientMetals</defName>
            <label>Hewn Ancient Metals</label>
            <description>These ancient metal walls have been here for a while. They can be mined to acquire steel chunks.</description>
            <graphicData>
              <shaderType>CutoutComplex</shaderType>
              <texPath>Things/Ore/HewnOre</texPath>
        			<graphicClass>Graphic_Random</graphicClass>
        			<linkType>CornerFiller</linkType>
        			<linkFlags>
        				<li>Wall</li>
                <li>Rock</li>
                <li>MapEdge</li>
        			</linkFlags>
        			<damageData>
        				<cornerTL>Damage/Corner</cornerTL>
        				<cornerTR>Damage/Corner</cornerTR>
        				<cornerBL>Damage/Corner</cornerBL>
        				<cornerBR>Damage/Corner</cornerBR>
        				<edgeTop>Damage/Edge</edgeTop>
        				<edgeBot>Damage/Edge</edgeBot>
        				<edgeLeft>Damage/Edge</edgeLeft>
        				<edgeRight>Damage/Edge</edgeRight>
        			</damageData>
              <drawSize>(4,4)</drawSize>
              <color>(80,80,80)</color>
              <colorTwo>(170,170,170)</colorTwo>
            </graphicData>
            <uiIconPath>Things/Ore/HewnOre/HewnOreA</uiIconPath>
            <statBases>
              <MaxHitPoints>2500</MaxHitPoints>
              <Flammability>0</Flammability>
              <Beauty>-1</Beauty>
            </statBases>
            <building>
              <isInert>true</isInert>
              <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
              <isNaturalRock>true</isNaturalRock>
              <isResourceRock>true</isResourceRock>
              <mineableThing>ChunkSlagSteel</mineableThing>
              <mineableDropChance>0.8</mineableDropChance>
              <mineableYield>1</mineableYield>
              <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
              <claimable>false</claimable>
              <deconstructible>false</deconstructible>
              <isEdifice>true</isEdifice>
            </building>
            <!--How far away it can spawn from an existing location-->
            <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
            <spawnRadius>1</spawnRadius>
            <!-- The probability that this mineral type will be spawned at all on a given map -->
            <perMapProbability>0</perMapProbability>
            <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
            <minClusterProbability>0</minClusterProbability>
            <maxClusterProbability>0</maxClusterProbability>
            <!-- How  many squares each cluster will be -->
            <minClusterSize>1</minClusterSize>
            <maxClusterSize>10</maxClusterSize>
            <!-- The range of starting sizes of individuals in clusters -->
            <initialSizeMin>1</initialSizeMin>
            <initialSizeMax>1</initialSizeMax>
            <!-- How much initial sizes of individuals randomly vary -->
            <initialSizeVariation>.3</initialSizeVariation>
            <!-- The terrains this can appear on. The default is rocky terrains-->
            <!--
        		<allowedTerrains>
        			<li>GU_AncientMetals_Rough</li>
        			<li>WaterOceanShallow</li>
        			<li>WaterShallow</li>
        		</allowedTerrains>
        		-->
            <allowedTerrains>
        		</allowedTerrains>
            <!-- The terrains this must be near to, but not necessarily on -->
            <neededNearbyTerrains>
              <li>GU_AncientMetals</li>
            </neededNearbyTerrains>
            <!-- how far away it can be from needed nearby terrains-->
            <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
            <!-- If true, growth rate and initial size depends on distance from needed terrains -->
            <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
            <!-- The maximum number of images that will be printed per square -->
            <maxMeshCount>1</maxMeshCount>
            <!-- The size range -->
            <visualSizeRange>
              <min>1.7</min>
              <max>1.8</max>
            </visualSizeRange>
            <visualClustering>1.0</visualClustering>
            <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
            <visualSpread>0.2</visualSpread>
            <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
            <visualSizeVariation>0.2</visualSizeVariation>
            <!-- Other resources it might drop -->
            <randomlyDropResources>
              <li>
                <ResourceDefName>RobotParts</ResourceDefName>
                <DropProbability>0.05</DropProbability>
              </li>
              <li>
                <ResourceDefName>Mechanism</ResourceDefName>
                <DropProbability>0.3</DropProbability>
              </li>
              <li>
                <ResourceDefName>AdvMechanism</ResourceDefName>
                <DropProbability>0.05</DropProbability>
              </li>
              <li>
                <ResourceDefName>Electronics</ResourceDefName>
                <DropProbability>0.2</DropProbability>
              </li>
              <li>
                <ResourceDefName>ElectronicComponents</ResourceDefName>
                <DropProbability>0.5</DropProbability>
              </li>
              <li>
                <ResourceDefName>Microchips</ResourceDefName>
                <DropProbability>0.1</DropProbability>
              </li>
              <li>
                <ResourceDefName>ComponentIndustrial</ResourceDefName>
                <DropProbability>1</DropProbability>
              </li>
            </randomlyDropResources>
            <!-- Things this mineral replaces when a map is initialized -->
            <ThingsToReplace>
              <li>GU_AncientMetals</li>
            </ThingsToReplace>
            <!-- Tags which determine how some options behave  -->
            <tags>
              <li>rock</li>
              <li>wall</li>
              <li>hewn</li>
            </tags>
          </ThingDef>

      </value>
    </match>
  </Operation>

</Patch>
