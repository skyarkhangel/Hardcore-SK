<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  
  <ThingDef Name="WeatheredOre" ParentName="WeatheredRockBase" Class="Minerals.ThingDef_StaticMineral" Abstract="True">
    <defName>WeatheredOre</defName>
    <uiIconPath>Things/Ore/WeatheredOre/WeatheredOreA</uiIconPath>
    <building>
      <isResourceRock>true</isResourceRock>
      <mineableThing>RoughGem</mineableThing>
      <mineableDropChance>0.01</mineableDropChance>
      <mineableYield>1</mineableYield>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.8</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- If the primary color is based on the stone below it -->
    <coloredByTerrain>true</coloredByTerrain>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>ore</li>
      <li>weathered</li>
      <li>wall</li>
    </tags>
  </ThingDef>


  <ThingDef Name="SolidOre" ParentName="SolidRockBase" Class="Minerals.ThingDef_SolidRock" Abstract="True">
    <defName>SolidOre</defName>
    <uiIconPath>Things/Ore/WeatheredOre/WeatheredOreA</uiIconPath>
    <building>
      <isResourceRock>true</isResourceRock>
      <mineableThing>RoughGem</mineableThing>
      <mineableDropChance>0.01</mineableDropChance>
      <mineableYield>1</mineableYield>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.8</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- If the primary color is based on the stone below it -->
    <coloredByTerrain>true</coloredByTerrain>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>ore</li>
      <li>solid</li>
      <li>wall</li>
    </tags>
  </ThingDef>
  

  <ThingDef Name="HewnOre" ParentName="HewnRockBase" Class="Minerals.ThingDef_StaticMineral" Abstract="True">
    <defName>HewnOre</defName>
    <uiIconPath>Things/Ore/HewnOre/HewnOreA</uiIconPath>
    <building>
      <isResourceRock>true</isResourceRock>
      <mineableThing>RoughGem</mineableThing>
      <mineableDropChance>0.01</mineableDropChance>
      <mineableYield>1</mineableYield>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!-- If the primary color is based on the stone below it -->
    <coloredByTerrain>true</coloredByTerrain>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>ore</li>
      <li>hewn</li>
      <li>wall</li>
    </tags>
  </ThingDef>
  

</Defs>