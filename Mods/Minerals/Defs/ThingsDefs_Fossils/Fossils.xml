<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  

  <ThingDef Name="SmallFossil" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>SmallFossils</defName>
    <label>Small Fossils</label>
    <description>The remains of long dead sea life. Life on this rimworld must be quite ancient.</description>
    <graphicData>
      <texPath>Things/Fossil/SmallFossil</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <color>(158,153,135)</color>
    </graphicData>
    <uiIconPath>Things/Fossil/SmallFossil/SmallFossilA</uiIconPath>
    <altitudeLayer>Floor</altitudeLayer>
    <fillPercent>0.01</fillPercent>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>10</Beauty>
    </statBases>
    <pathCost>5</pathCost>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>SmallFossil</mineableThing>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>6</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.5</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.002</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>20</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.5</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
      <li>Claystone_Rough</li>
    </allowedTerrains>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>6</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.2</min>
      <max>0.6</max>
    </visualSizeRange>
    <visualClustering>0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>1.0</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- If the primary color is based on the stone below it -->
    <coloredByTerrain>true</coloredByTerrain>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>fossil</li>
      <li>NoticeMineral_Event</li>
    </tags>
    <hideAtSnowDepth>0.4</hideAtSnowDepth>
  </ThingDef>


  <ThingDef Name="MediumFossil" ParentName="BigMineralBase" Class="Minerals.ThingDef_BigMineral">
    <defName>MediumFossil</defName>
    <label>Medium Fossil</label>
    <description>The remains of a long dead creature. Life on this rimworld must be quite ancient.</description>
    <graphicData>
      <texPath>Things/Fossil/MediumFossilEmbedded</texPath>
      <shaderType>CutoutComplex</shaderType>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(158,153,135)</color>
    </graphicData>
    <randomColorsTwo>
      <li>(190,190,190)</li>
      <li>(220,220,220)</li>
      <li>(230,230,230)</li>
    </randomColorsTwo>
    <uiIconPath>Things/Fossil/MediumFossilEmbedded/MediumFossilEmbeddedA</uiIconPath>
    <altitudeLayer>Floor</altitudeLayer>
    <fillPercent>0.01</fillPercent>
    <passability>Standable</passability>
    <statBases>
      <MaxHitPoints>2000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>20</Beauty>
    </statBases>
    <pathCost>5</pathCost>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>SmallFossil</mineableThing>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>6</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.3</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>5</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.7</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
      <li>Claystone_Rough</li>
    </allowedTerrains>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.8</min>
      <max>1.2</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>2.0</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- If the primary color is based on the stone below it -->
    <coloredByTerrain>true</coloredByTerrain>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>fossil</li>
      <li>big_mineral</li>
    </tags>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>SmallFossil</li>
    </ThingsToReplace>
    <!-- If graphic overlapping with nearby wall textures are rotated -->
    <growsUpWalls>false</growsUpWalls>
    <!-- The radius that will be searched to replace things -->
    <replaceRadius>1</replaceRadius>
    <!-- The minmum propotion of things in radius to replace for a replacement to happen -->
    <repalceThreshold>0.4</repalceThreshold>
    <!-- If it replaces everything -->
    <replaceAll>false</replaceAll>
    <!-- If it must replace something in order to spawned -->
    <mustReplace>false</mustReplace>
    <hideAtSnowDepth>0.5</hideAtSnowDepth>
  </ThingDef>


  <ThingDef ParentName="BigMineralTrophyBase" Class="Minerals.ThingDef_BigMineralTrophy">
    <defName>MediumFossilTrophy</defName>
    <label>Medium Fossil Specimen</label>
    <description>A fossil, carefully extracted from where it had lain for thousands of years. It makes a nice decoration and is valuable to certain traders. Studying it might tell you something about this planet's ecology.</description>
    <graphicData>
      <texPath>Things/Fossil/MediumFossilTrophy</texPath>
      <shaderType>CutoutComplex</shaderType>
      <graphicClass>Graphic_Random</graphicClass>
      <damageData>
        <enabled>false</enabled>
      </damageData>
      <drawSize>(1.1,1.1)</drawSize>
      <color>(158,153,135)</color>
      <colorTwo>(220,220,220)</colorTwo>
    </graphicData>
    <uiIconPath>Things/Fossil/MediumFossilTrophy/MediumFossilTrophyA</uiIconPath>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <WorkToBuild>600</WorkToBuild>
      <Mass>20</Mass>
      <Beauty>50</Beauty>
      <MarketValue>1000</MarketValue>
      <ResearchSpeedFactor>0.65</ResearchSpeedFactor>
    </statBases>
    <costList>
      <SmallFossil>5</SmallFossil>
    </costList>
    <comps>
      <li Class="CompProperties_Facility">
        <statOffsets>
          <ResearchSpeedFactor>0.05</ResearchSpeedFactor>
        </statOffsets>
        <maxSimultaneous>3</maxSimultaneous>
      </li>
    </comps>
    <placeWorkers>
      <li>PlaceWorker_ShowFacilitiesConnections</li>
    </placeWorkers>
  </ThingDef>


  <ThingDef Name="LargeFossil" ParentName="BigMineralBase" Class="Minerals.ThingDef_BigMineral">
    <defName>LargeFossil</defName>
    <label>Large Fossil</label>
    <description>The remains of a large creature, long dead. Life on this rimworld must be ancient and complex.</description>
    <graphicData>
      <texPath>Things/Fossil/LargeFossilEmbedded</texPath>
      <shaderType>CutoutComplex</shaderType>
      <graphicClass>Graphic_Random</graphicClass>
      <!-- <drawSize>(2,2)</drawSize> -->
      <color>(158,153,135)</color>
    </graphicData>
    <randomColorsTwo>
      <li>(190,190,190)</li>
      <li>(220,220,220)</li>
      <li>(230,230,230)</li>
    </randomColorsTwo>
    <uiIconPath>Things/Fossil/LargeFossilEmbedded/LargeFossilEmbeddedA</uiIconPath>
    <altitudeLayer>Floor</altitudeLayer>
    <fillPercent>0.01</fillPercent>
    <passability>Standable</passability>
    <statBases>
      <MaxHitPoints>4000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>50</Beauty>
    </statBases>
    <size>(2,2)</size>
    <pathCost>10</pathCost>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>SmallFossil</mineableThing>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>8</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.0005</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>2</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.7</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
      <li>Claystone_Rough</li>
    </allowedTerrains>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.0</min>
      <max>2.5</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>4.0</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- If the primary color is based on the stone below it -->
    <coloredByTerrain>true</coloredByTerrain>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>fossil</li>
      <li>big_mineral</li>
    </tags>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>SmallFossil</li>
    </ThingsToReplace>
    <!-- If graphic overlapping with nearby wall textures are rotated -->
    <growsUpWalls>false</growsUpWalls>
    <!-- The radius that will be searched to replace things -->
    <replaceRadius>1</replaceRadius>
    <!-- The minmum propotion of things in radius to replace for a replacement to happen -->
    <repalceThreshold>0.4</repalceThreshold>
    <!-- If it replaces everything -->
    <replaceAll>false</replaceAll>
    <!-- If it must replace something in order to spawned -->
    <mustReplace>false</mustReplace>
    <hideAtSnowDepth>0.7</hideAtSnowDepth>
  </ThingDef>
  

  <ThingDef ParentName="BigMineralTrophyBase" Class="Minerals.ThingDef_BigMineralTrophy">
    <defName>LargeFossilTrophy</defName>
    <label>Large Fossil Specimen</label>
    <description>An huge fossil, carefully extracted from where it had lain for thousands of years. It makes a very nice decoration and is quite valuable to certain traders. Studying it might tell you something about this planet's ecology.</description>
    <graphicData>
      <texPath>Things/Fossil/LargeFossilTrophy</texPath>
      <shaderType>CutoutComplex</shaderType>
      <graphicClass>Graphic_Random</graphicClass>
      <damageData>
        <enabled>false</enabled>
      </damageData>
      <drawSize>(2.0,2.0)</drawSize>
      <color>(158,153,135)</color>
      <colorTwo>(220,220,220)</colorTwo>
    </graphicData>
    <uiIconPath>Things/Fossil/LargeFossilTrophy/LargeFossilTrophyA</uiIconPath>
    <statBases>
      <MaxHitPoints>2000</MaxHitPoints>
      <WorkToBuild>6000</WorkToBuild>
      <Mass>100</Mass>
      <Beauty>150</Beauty>
      <MarketValue>3000</MarketValue>
      <ResearchSpeedFactor>0.9</ResearchSpeedFactor>
    </statBases>
    <size>(2,2)</size>
    <costList>
      <SmallFossil>5</SmallFossil>
    </costList>
    <comps>
      <li Class="CompProperties_Facility">
        <statOffsets>
          <ResearchSpeedFactor>0.1</ResearchSpeedFactor>
        </statOffsets>
        <maxSimultaneous>3</maxSimultaneous>
      </li>
    </comps>
    <placeWorkers>
      <li>PlaceWorker_ShowFacilitiesConnections</li>
    </placeWorkers>
  </ThingDef>


</Defs>
