<?xml version="1.0" encoding="utf-8" ?>
<LanguageData>

 
  <MessageSiegersAssaulting>Sieging {0} from {1} are assaulting the colony.</MessageSiegersAssaulting>

  <MessageRaidersBeginningAssault>{0} from {1} are beginning their assault.</MessageRaidersBeginningAssault>
  <MessageRaidersDetectedEarlyAssault>{0} from {1} have detected you and begun their assault early.</MessageRaidersDetectedEarlyAssault>
  <MessageRaidersKidnapping>{0} from {1} have decided to kidnap who they can and leave.</MessageRaidersKidnapping>

  <MessageRaidersLeaving>{0} from {1} are leaving.</MessageRaidersLeaving>
	<MessageRaidersGivenUpLeaving>{0} from {1} have given up and are leaving.</MessageRaidersGivenUpLeaving>
  <MessageRaidersSatisfiedLeaving>{0} from {1} are satisfied with the damage done and are leaving.</MessageRaidersSatisfiedLeaving>

  <MessageFightersFleeing>{0} from {1} are fleeing.</MessageFightersFleeing>
  <MessageFriendlyFightersLeaving>Friendly {0} from {1} are leaving.</MessageFriendlyFightersLeaving>

  <MessageVisitorsTakingWounded>{0} from {1} are taking a wounded guest.</MessageVisitorsTakingWounded>
  
  <MessageWornApparelDeterioratedAway>{0} worn by {1} deteriorated away to nothing.</MessageWornApparelDeterioratedAway>
  
  <MessageSeasonBegun>{0} has begun.</MessageSeasonBegun>

  <MessageShipHasLeftCommsRange>{0} has left comms range.</MessageShipHasLeftCommsRange>
	
	<MessageNeedBeaconToTradeWithShip>You need an orbital trade beacon to trade with a ship.\n\nThe beacon needs to be powered.</MessageNeedBeaconToTradeWithShip>
	
  <MessageBillComplete>Bill complete: {0}.</MessageBillComplete>
  
  <MessageFullyHealed>{0} is fully healed.</MessageFullyHealed>

  <MessagePrisonerIsEscaping>Prisoner {0} is escaping.</MessagePrisonerIsEscaping>

  <MessageOutOfNearbyShellsFor>{0} found no nearby unreserved shells for {1}.</MessageOutOfNearbyShellsFor>

  <MessageAnimalsGoPsychoHunted>Warning: {0}s will often attack when harmed.</MessageAnimalsGoPsychoHunted>
  <MessageAnimalManhuntsOnTameFailed>Warning: {0}s may attack upon a failed taming attempt ({1} chance).</MessageAnimalManhuntsOnTameFailed>
  
  <LetterLabelMessageRecruitSuccess>New recruit</LetterLabelMessageRecruitSuccess>
  <MessageRecruitSuccess>{0} successfully recruited {1} ({2} chance).</MessageRecruitSuccess>
	<MessageRecruitFail>{0} failed to recruit {1} ({2} chance).</MessageRecruitFail>
	<MessageRecruitFailBecauseMood>{0} failed to recruit {1} (prisoner below {2} mood).</MessageRecruitFailBecauseMood>
  <MessageTameSuccess>{0} successfully tamed {1} ({2} chance).</MessageTameSuccess>
  <MessageTameAndNameSuccess>{0} successfully tamed {1} ({2} chance) and named it {3}.</MessageTameAndNameSuccess>


  <MessageColonyCannotAfford>The colony cannot afford this deal.</MessageColonyCannotAfford>
  <MessageColonyNotEnoughSilver>You do not have enough silver ready to trade.</MessageColonyNotEnoughSilver>

  <MessageCriticalAlert>Critical alert: {0}</MessageCriticalAlert>

  <MessageMustDesignateHarvestable>Must designate harvestable sufficiently-grown plants.</MessageMustDesignateHarvestable>
  <MessageMustDesignateHarvestableWood>Must designate wood-yielding, sufficiently-grown plants.</MessageMustDesignateHarvestableWood>
  <MessageMustDesignatePlants>Must designate plants.</MessageMustDesignatePlants>
  <MessageMustDesignateHaulable>Must designate haulable items.</MessageMustDesignateHaulable>
  <MessageMustDesignateMineable>Must designate impassable mineable rocks.</MessageMustDesignateMineable>
  <MessageMustDesignateHuntable>Must designate huntable animals.</MessageMustDesignateHuntable>
  <MessageMustDesignateTameable>Must designate tameable animals.</MessageMustDesignateTameable>
  <MessageMustDesignateClaimable>Must designate abandoned artificial structures.</MessageMustDesignateClaimable>
  <MessageMustDesignateSmoothableFloor>Must designate rough stone terrain.</MessageMustDesignateSmoothableFloor>
  <MessageNothingCanRemoveThickRoofs>Nothing can remove thick roofs.</MessageNothingCanRemoveThickRoofs>
  <MessageAlreadyInStorage>This is already in storage and will be moved to high-priority storage as necessary.</MessageAlreadyInStorage>
  <MessageMustDesignateStrippable>Must designate corpse or downed character with strippable apparel.</MessageMustDesignateStrippable>
  <MessageMustDesignateSlaughterable>Must designate tame animal that belongs to the colony.</MessageMustDesignateSlaughterable>
  <MessageMustDesignateOpenable>Must designate full graves or containers.</MessageMustDesignateOpenable>

  <MessageRefusedArrest>{0} has refused to be arrested!</MessageRefusedArrest>
  
  <MessageNoMedicalBeds>There are no medical beds available.</MessageNoMedicalBeds>
  <MessageNoAnimalBeds>There are no animal beds available.</MessageNoAnimalBeds>
  
  <PawnDiedBecauseOf>{0} has died because of {1}.</PawnDiedBecauseOf>

  <MessageNoLongerDowned>{0} is no longer incapable of walking.</MessageNoLongerDowned>

  <MessageInvoluntarySleep>{0} has collapsed due to extreme exhaustion.</MessageInvoluntarySleep>

  <MessageMedicalOperationFailureCatastrophic>{0} has failed catastrophically while operating on {1}.</MessageMedicalOperationFailureCatastrophic>
  <MessageMedicalOperationFailureMinor>{0} has failed in a minor way while operating on {1}.</MessageMedicalOperationFailureMinor>

  <MessageMedicalOperationWillAngerFaction>This operation will anger {0}.</MessageMedicalOperationWillAngerFaction>

  <MessagePawnExitMapRelationsGain>Because {0} exited the map healthy, relations with {1} have improved by {2}.</MessagePawnExitMapRelationsGain>

  <MessageMiscarriedStarvation>{0} has miscarried due to starvation.</MessageMiscarriedStarvation>
  <MessageMiscarriedPoorHealth>{0} has miscarried due to poor health.</MessageMiscarriedPoorHealth>
  <MessageGaveBirth>{0} has given birth.</MessageGaveBirth>

  <MessageNuzzledPawnGaveNameTo>{0} has named {1} {2} after being nuzzled.</MessageNuzzledPawnGaveNameTo>

  <MessageNoHandlerSkilledEnough>No handler can tame {0} (requires level {1} in {2}, best handler {3} has {4}).</MessageNoHandlerSkilledEnough>
  
  <MessageEatenByPredator>{0} has been eaten by {1}.</MessageEatenByPredator>
  <MessageAttackedByPredator>{0} is being attacked by {1}!</MessageAttackedByPredator>
  
  <MessageHiveReproduced>A bug hive has reproduced itself.</MessageHiveReproduced>
  
  <MessageTraderCaravanLeaving>The trade caravan from {0} is leaving.</MessageTraderCaravanLeaving>
  
  <MessageCantSelectDeadFamilyMember>{0} is dead.</MessageCantSelectDeadFamilyMember>
  <MessageCantSelectOffMapFamilyMember>{0} is off the map.</MessageCantSelectOffMapFamilyMember>
  
  <MessageSocialFight>{0} started a social fight with {1}. Reason: {2}.</MessageSocialFight>
  
  <MessageNewMarriageCeremony>Colonists are gathering to celebrate {0} and {1}’s marriage.</MessageNewMarriageCeremony>
  <MessageMarriageCeremonyStarts>{0} and {1} are beginning their marriage ceremony!</MessageMarriageCeremonyStarts>
  <MessageMarriageCeremonyCalledOff>The marriage ceremony for {0} and {1} has been called off.</MessageMarriageCeremonyCalledOff>
  <MessageNewlyMarried>{0} and {1} have married. Colonists are now celebrating the occasion.</MessageNewlyMarried>
  <MessageMarriageCeremonyAfterPartyFinished>The marriage ceremony for {0} and {1} has finished.</MessageMarriageCeremonyAfterPartyFinished>
  
  <MessageNewBondRelation>{0} and {1} have formed a bond.</MessageNewBondRelation>
  <MessageNewBondRelationNewName>{0} and {1} have formed a bond. {0} has named {1} {2}.</MessageNewBondRelationNewName>
  
  <MessageBondedAnimalMentalBreak>{0} has a mental break because of {1}'s death.</MessageBondedAnimalMentalBreak>
  <MessageNamedBondedAnimalMentalBreak>{0} named {1} has a mental break because of {2}'s death.</MessageNamedBondedAnimalMentalBreak>
  <MessageBondedAnimalsMentalBreak>{0} animals have a mental break because of {1}'s death.</MessageBondedAnimalsMentalBreak>
  
  <MessageSuccessfullyRemovedHediff>{0} has successfully removed {1}'s {2}.</MessageSuccessfullyRemovedHediff>
  
  <MessageShipChunkDrop>A chunk of a spacecraft has fallen from space and landed nearby.</MessageShipChunkDrop>
  
  <MessagePartyCalledOff>The party has been called off.</MessagePartyCalledOff>
  <MessagePartyFinished>The party has finished.</MessagePartyFinished>
  
</LanguageData>