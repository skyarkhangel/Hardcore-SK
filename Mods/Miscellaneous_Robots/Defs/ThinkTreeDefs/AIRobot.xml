<?xml version="1.0" encoding="utf-8" ?>
<ThinkTrees>

	<ThinkTreeDef>
		<defName>AIRobot</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
				<li Class="ThinkNode_Subtree">
					<treeDef>Downed</treeDef>
				</li>

				<!-- Burning response -->
				<li Class="ThinkNode_Subtree">
					<treeDef>AIRobot_BurningResponse</treeDef>
				</li>

				<!-- React to close melee threat -->
				<li Class="JobGiver_ReactToCloseMeleeThreat" />


				<!-- If on colonist team, do forced and emergency work -->
				<li Class="ThinkNode_ConditionalColonist">
					<subNodes>


						<!-- Take direct orders when drafted -->
						<li Class="JobGiver_Orders" />
					</subNodes>
				</li>

				<!-- Lord directives (high priority) -->
				<li Class="ThinkNode_JoinVoluntarilyJoinableLord">
					<dutyHook>HighPriority</dutyHook>
					<subNodes>
						<li Class="ThinkNode_Subtree">
							<treeDef>AIRobot_LordDuty</treeDef>
						</li>
					</subNodes>
				</li>

				<!-- Prisoner -->
				<li Class="ThinkNode_ConditionalPrisoner">
					<leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
					<subNodes>
						<li Class="ThinkNode_PrioritySorter">
							<subNodes>
								<li Class="AIRobot.JobGiver_RechargeEnergy"/>
								<li Class="JobGiver_Work"/>
							</subNodes>
						</li>
						<li Class="ThinkNode_ConditionalReleased">
							<subNodes>
								<li Class="JobGiver_ExitMapNearest">
									<locomotion>Walk</locomotion>
								</li>
							</subNodes>
						</li>
						<li Class="JobGiver_WanderCurrentRoom">
							<maxDanger>Deadly</maxDanger>
						</li>
						<li Class="JobGiver_IdleError" />
					</subNodes>
				</li>


				<!-- If on colonist team, do forced and emergency work -->
				<li Class="ThinkNode_ConditionalColonist">
					<subNodes>			
						<!-- Queue for forced work -->
						<li Class="JobGiver_JobQueue">
							<leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
						</li>

						<!-- Seek allowed area -->
						<li Class="JobGiver_SeekAllowedArea" />
						<!-- Seek safe temperatures -->
						<li Class="JobGiver_SeekSafeTemperature" />
						<!-- Drop unused inventory -->
						<li Class="JobGiver_DropUnusedInventory" />
						<!-- Emergency work -->
						<li Class="JobGiver_Work">
							<leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
							<emergency>true</emergency>
						</li>
					</subNodes>
				</li>

				<!-- Lord directives (medium priority) -->
				<li Class="ThinkNode_JoinVoluntarilyJoinableLord">
					<dutyHook>MediumPriority</dutyHook>
					<subNodes>
						<li Class="ThinkNode_Subtree">
							<treeDef>AIRobot_LordDuty</treeDef>
						</li>
					</subNodes>
				</li>

				<!-- Main behavior core-->
				<li Class="ThinkNode_ConditionalColonist">
					<subNodes>		
						<li Class="ThinkNode_PrioritySorter">
							<subNodes>
								<!-- AIPawn - satisfy basic needs -->
								<li Class="AIRobot.JobGiver_RechargeEnergy"/>
								<li Class="JobGiver_Work"/>
							</subNodes>
						</li>
					</subNodes>
				</li>

				<!-- Idle wander for colonists -->
				<li Class="ThinkNode_ConditionalColonist">
					<subNodes>
						<li Class="ThinkNode_Tagger">
							<tagToGive>Idle</tagToGive>
							<subNodes>
								<li Class="JobGiver_WanderCurrentRoom">
									<maxDanger>Deadly</maxDanger>
								</li>
							</subNodes>
						</li>
					</subNodes>
				</li>


				<!-- If you're a neutral non-prisoner, if you're not bleeding exit the map, otherwise wander the room -->
				<li Class="ThinkNode_ConditionalPrisoner">
					<invert>true</invert>
					<subNodes>
						<li Class="ThinkNode_ConditionalNeutralFaction">
							<subNodes>
								<li Class="JobGiver_ExitMapNearest" />
							</subNodes>
						</li>
					</subNodes>
				</li>

				<li Class="JobGiver_WanderAnywhere">
					<maxDanger>Deadly</maxDanger>
				</li>

				<li Class="JobGiver_IdleError"/>

			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>
	

  
	<ThinkTreeDef>
		<defName>AIRobotConstant</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
				<li Class="ThinkNode_ConditionalCanDoConstantThinkTreeJobNow">
					<subNodes>
            <!-- Flee explosion -->
            <li Class="JobGiver_FleeExplosion" />
        
            <!-- Hostility response -->
            <li Class="JobGiver_ConfigurableHostilityResponse" />
            
            <!-- Lord directives -->
            <li Class="ThinkNode_Subtree">
              <treeDef>AIRobot_LordDutyConstant</treeDef>
            </li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>
	
</ThinkTrees>
